{"ast":null,"code":"var _jsxFileName = \"/Users/niloofararazkhani/Desktop/tic-tac-toe-game/src/components/board/Board.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./boardStyle.scss\";\nimport Square from \"../Square\";\nexport default function Board() {\n  const [arrayState, setArrayState] = useState(Array(9).fill(null));\n  const [isNext, setIsNext] = useState(true);\n\n  const renderSquare = i => {\n    return React.createElement(Square, {\n      num: arrayState[i],\n      onClick: () => handelClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  };\n\n  const handelClick = i => {\n    const newSquares = [...arrayState];\n    isNext ? newSquares[i] = \"X\" : newSquares[i] = 'O';\n    setArrayState(newSquares);\n    isNext ? setIsNext(false) : setIsNext(true);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"board__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Next Player is:\", isNext ? ' X' : ' O', \"  \"), React.createElement(\"div\", {\n    className: \"board__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), React.createElement(\"div\", {\n    className: \"board__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), React.createElement(\"div\", {\n    className: \"board__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, renderSquare(6), renderSquare(7), renderSquare(8)));\n}","map":{"version":3,"sources":["/Users/niloofararazkhani/Desktop/tic-tac-toe-game/src/components/board/Board.js"],"names":["React","useState","useEffect","Square","Board","arrayState","setArrayState","Array","fill","isNext","setIsNext","renderSquare","i","handelClick","newSquares"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAACM,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAA5C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBT,QAAQ,CAAC,IAAD,CAAnC;;AAEA,QAAMU,YAAY,GAAGC,CAAC,IAAI;AACxB,WAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEP,UAAU,CAACO,CAAD,CAAvB;AAA4B,MAAA,OAAO,EAAE,MAAMC,WAAW,CAACD,CAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAGD,CAAC,IAAI;AACvB,UAAME,UAAU,GAAG,CAAC,GAAGT,UAAJ,CAAnB;AACAI,IAAAA,MAAM,GAAGK,UAAU,CAACF,CAAD,CAAV,GAAgB,GAAnB,GAAwBE,UAAU,CAACF,CAAD,CAAV,GAAc,GAA5C;AACAN,IAAAA,aAAa,CAACQ,UAAD,CAAb;AACAL,IAAAA,MAAM,GAAEC,SAAS,CAAC,KAAD,CAAX,GAAmBA,SAAS,CAAC,IAAD,CAAlC;AACD,GALD;;AAOA,SAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA8CD,MAAM,GAAC,IAAD,GAAM,IAA1D,OADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf,CAFF,EAQE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,YAAY,CAAC,CAAD,CADb,EAECA,YAAY,CAAC,CAAD,CAFb,EAGCA,YAAY,CAAC,CAAD,CAHb,CARF,EAaE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,YAAY,CAAC,CAAD,CADb,EAECA,YAAY,CAAC,CAAD,CAFb,EAGCA,YAAY,CAAC,CAAD,CAHb,CAbF,CAFF;AAsBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./boardStyle.scss\";\nimport Square from \"../Square\";\n\nexport default function Board() {\n  const [arrayState, setArrayState] = useState(Array(9).fill(null));\n  const [isNext, setIsNext]= useState(true)\n\n  const renderSquare = i => {\n    return <Square num={arrayState[i]} onClick={() => handelClick(i)} />;\n  };\n  const handelClick = i => {\n    const newSquares = [...arrayState];\n    isNext ? newSquares[i] = \"X\" :newSquares[i]='O' ;\n    setArrayState(newSquares);\n    isNext? setIsNext(false):setIsNext(true);\n  };\n  \n  return (\n    \n    <div className=\"board\">\n      <div className=\"board__title\">Next Player is:{isNext?' X':' O'}  </div>\n      <div className=\"board__row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n        \n      </div>\n      <div className=\"board__row\">\n      {renderSquare(3)}\n      {renderSquare(4)}\n      {renderSquare(5)}\n      </div>\n      <div className=\"board__row\">\n      {renderSquare(6)}\n      {renderSquare(7)}\n      {renderSquare(8)}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}